{"version":3,"sources":["components/chatbox/ChatMessage.jsx","redux/actionTypes.js","redux/actions.js","components/chatbox/Chatbox.jsx","components/editor/CodeEditor.jsx","components/editor/Editor.jsx","components/header/Header.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["ChatMessage","userMessage","botMessage","align","style","marginTop","span","offset","fontSize","className","marginBottom","SEND_MESSAGE","SET_BOT_RESPONSE","CHANGE_CODE_EDITOR","SET_CODE","sendUserRequest","code","message","axios","post","setBotResponse","payload","type","actionTypes","changeCodeEditor","Chatbox","props","divRef","useRef","useEffect","current","addEventListener","event","target","currentTarget","scroll","top","scrollHeight","behavior","useState","msg","setMsg","useSelector","state","chatList","dispatch","useDispatch","handleKeyPress","a","key","currentKey","length","chatMsg","color","size","data","ref","map","item","value","placeholder","onChange","e","handleChange","onKeyPress","CodeEditor","handleEditorChange","defaultValue","height","theme","defaultLanguage","Editor","codeEditorList","counter","setCounter","activeKey","setActiveKey","activeTab","setActiveTab","selectTab","targetKey","filter","handleApply","content","onClick","title","stopPropagation","lastIndex","newActiveKey","forEach","tab","i","newTabsList","deleteTab","verticalAlign","push","add","newPanes","Header","App","border","defaultCode","initialState","Reducer","action","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e7e0321.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Row } from \"antd\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nfunction ChatMessage({ userMessage, botMessage }) {\n  return (\n    <>\n      <Row align=\"middle\" style={{ marginTop: \"30px\" }}>\n        <Col span={2} offset={1}>\n          <AccountCircleIcon fontSize=\"large\" />\n        </Col>\n        <Col span={4} offset={1} className=\"message\">\n          {userMessage}\n        </Col>\n      </Row>\n      <Row align=\"middle\" style={{ marginTop: \"30px\", marginBottom: \"30px\" }}>\n        <Col span={4} offset={16} className=\"message\">\n          {botMessage}\n        </Col>\n        <Col span={2} offset={1}>\n          <AccountCircleIcon fontSize=\"large\" />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default ChatMessage;\n","export const SEND_MESSAGE = \"sendMessage\";\nexport const SET_BOT_RESPONSE = \"setBotResponse\";\nexport const CHANGE_CODE_EDITOR = \"changeCodeEditor\";\nexport const SET_CODE = \"setCode\";\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const sendMessage = (payload) => ({\n  type: actionTypes.SEND_MESSAGE,\n  payload,\n});\n\nexport const changeEditor = (payload) => ({\n  type: actionTypes.CHANGE_CODE_EDITOR,\n  payload,\n});\n\nexport const sendUserRequest = (code, message) => {\n  return axios.post(\"https://shrouded-oasis-94153.herokuapp.com/\", {\n    code: `(${code})(\"${message}\")`,\n  });\n};\n\nexport const setBotResponse = (payload) => ({\n  type: actionTypes.SET_BOT_RESPONSE,\n  payload,\n});\n\nexport const changeCodeEditor = (payload) => ({\n  type: actionTypes.CHANGE_CODE_EDITOR,\n  payload,\n});\n\nexport const setCode = (payload) => ({\n  type: actionTypes.SET_CODE,\n  payload,\n});\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Col, Row } from \"antd\";\nimport ChatMessage from \"./ChatMessage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  sendMessage,\n  sendUserRequest,\n  setBotResponse,\n} from \"../../redux/actions\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nconst Chatbox = (props) => {\n  const divRef = useRef(null);\n\n  useEffect(() => {\n    if (divRef) {\n      divRef.current.addEventListener(\"DOMNodeInserted\", (event) => {\n        const { currentTarget: target } = event;\n        target.scroll({ top: target.scrollHeight, behavior: \"smooth\" });\n      });\n    }\n  }, []);\n\n  const [msg, setMsg] = useState(\"\");\n\n  const { chatList, code } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    setMsg(target.value);\n  };\n\n  const handleKeyPress = async ({ key }) => {\n    const currentKey = chatList.length;\n    if (key === \"Enter\") {\n      const chatMsg = {\n        key: currentKey,\n        userMessage: msg,\n        botMessage: <PulseLoader color={\"white\"} size={10} />,\n      };\n      dispatch(\n        sendMessage({\n          ...chatMsg,\n        })\n      );\n      setMsg(\"\");\n      const { data } = await sendUserRequest(code, msg);\n      dispatch(\n        setBotResponse({\n          key: currentKey,\n          botMessage: data,\n        })\n      );\n    }\n  };\n  return (\n    <>\n      <Row>\n        <Col offset={4} span={18} className=\"chat-box\" ref={divRef}>\n          {chatList.map((item) => (\n            <ChatMessage\n              key={item.key}\n              userMessage={item.userMessage}\n              botMessage={item.botMessage}\n            />\n          ))}\n        </Col>\n      </Row>\n      <Row>\n        <Col offset={4} span={18} className=\"user-box\">\n          <input\n            value={msg}\n            className=\"userinput-box\"\n            type=\"text\"\n            placeholder=\"Type Message Here\"\n            onChange={(e) => handleChange(e)}\n            onKeyPress={(e) => handleKeyPress(e)}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Chatbox;\n","import React from \"react\";\nimport Editor from \"@monaco-editor/react\";\n\nfunction CodeEditor({ value, handleEditorChange, defaultValue }) {\n  return (\n    <>\n      <Editor\n        height=\"80vh\"\n        theme=\"vs-dark\"\n        value={value}\n        defaultLanguage=\"javascript\"\n        defaultValue={defaultValue}\n        onChange={(e) => handleEditorChange(e)}\n      />\n    </>\n  );\n}\n\nexport default CodeEditor;\n","import React, { useState } from \"react\";\nimport { Row, Col, Select } from \"antd\";\nimport CodeEditor from \"../editor/CodeEditor\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\n\nimport { changeCodeEditor, setCode } from \"../../redux/actions\";\n\nconst Editor = () => {\n  const { codeEditorList, code } = useSelector((state) => state);\n  const [counter, setCounter] = useState(1);\n  const [activeKey, setActiveKey] = useState(\"1\");\n  const [activeTab, setActiveTab] = useState(codeEditorList[0]);\n\n  const dispatch = useDispatch();\n\n  const add = () => {\n    setCounter(counter + 1);\n    const activeKey = `newTab${counter}`;\n    const newTabsList = [...codeEditorList];\n    newTabsList.push({\n      title: `${activeKey}`,\n      content: \"//write your code here\",\n      key: activeKey,\n    });\n    dispatch(\n      changeCodeEditor({\n        codeEditorList: newTabsList,\n      })\n    );\n  };\n\n  const deleteTab = (e, targetKey) => {\n    e.stopPropagation();\n    let newActiveKey = activeKey;\n    let lastIndex;\n    codeEditorList.forEach((tab, i) => {\n      if (tab.key === targetKey) {\n        lastIndex = i - 1;\n      }\n    });\n    const newTabsList = codeEditorList.filter((tab) => tab.key !== targetKey);\n    if (lastIndex >= 0) {\n      newActiveKey = newTabsList[lastIndex].key;\n    } else {\n      newActiveKey = \"1\";\n    }\n    dispatch(\n      changeCodeEditor({\n        codeEditorList: newTabsList,\n      })\n    );\n    selectTab(newActiveKey);\n  };\n\n  const selectTab = (targetKey) => {\n    setActiveKey(targetKey);\n\n    const activeTab = codeEditorList.filter((item) => item.key === targetKey);\n    setActiveTab(activeTab[0]);\n  };\n\n  const handleEditorChange = (value) => {\n    const newPanes = codeEditorList.map((item) => {\n      if (item.key === activeKey) {\n        return {\n          ...item,\n          content: value,\n        };\n      }\n      return item;\n    });\n    dispatch(\n      changeCodeEditor({\n        codeEditorList: newPanes,\n      })\n    );\n  };\n\n  const handleApply = () => {\n    if (activeKey === \"1\") {\n      dispatch(\n        setCode({\n          code: codeEditorList[0].content,\n        })\n      );\n    }\n  };\n\n  const buttonStyle = () =>\n    codeEditorList[0].content === code\n      ? \"apply-changes-button\"\n      : \"apply-changes-button apply-activate\";\n\n  return (\n    <>\n      <Row type=\"flex\">\n        <Col span={2}>\n          <button className=\"tab-button\" onClick={() => selectTab(\"1\")}>\n            main\n          </button>\n        </Col>\n        <Col span={15} className=\"tabs-list\">\n          {codeEditorList.map((item) => {\n            if (item.key !== \"1\")\n              return (\n                <button\n                  key={item.key}\n                  className=\"tab-button\"\n                  onClick={() => selectTab(item.key)}\n                >\n                  {item.title}\n                  <ClearIcon\n                    onClick={(e) => deleteTab(e, item.key)}\n                    fontSize={\"small\"}\n                    style={{ verticalAlign: \"middle\" }}\n                  />\n                </button>\n              );\n          })}\n          <button className=\"tab-button\">\n            <AddIcon\n              onClick={() => add()}\n              fontSize={\"small\"}\n              style={{ verticalAlign: \"middle\" }}\n            />\n          </button>\n        </Col>\n        <Col span={6}>\n          <button className={buttonStyle()} onClick={() => handleApply()}>\n            <CachedIcon\n              fontSize={\"small\"}\n              style={{ verticalAlign: \"middle\" }}\n            />\n            &nbsp;Apply Changes\n          </button>\n        </Col>\n      </Row>\n      <Row>\n        <CodeEditor\n          value={activeTab.content}\n          defaultValue={activeTab.content}\n          handleEditorChange={handleEditorChange}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default Editor;\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nfunction Header(props) {\n  return (\n    <Row align=\"middle\" className=\"header2\">\n      <Col span={4}>\n        <span className=\"header Text-Style\">AI Playground</span>\n      </Col>\n      <Col span={2} offset={10}>\n        <span className=\"header Text-Style2\">Learn AI</span>\n      </Col>\n      <Col span={2}>\n        <span className=\"header Text-Style2\">Docs</span>\n      </Col>\n      <Col span={4}>\n        <span className=\"header Text-Style2\">\n          <AccountCircleIcon\n            fontSize=\"large\"\n            style={{ verticalAlign: \"middle\" }}\n          />\n          &nbsp;Account\n        </span>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Header;\n","import Chatbox from \"./components/chatbox/Chatbox\";\nimport Editor from \"./components/editor/Editor\";\nimport Header from \"./components/header/Header\";\nimport { Row, Col } from \"antd\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Row className=\"container\">\n        <Col\n          span={10}\n          style={{\n            border: \"1px solid #2b2b2b\",\n          }}\n        >\n          <Editor />\n        </Col>\n        <Col span={14} style={{ border: \"1px solid #2b2b2b\" }}>\n          <Chatbox />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default App;\n","import * as actionTypes from \"./actionTypes\";\nconst defaultCode = \"function name (param) {return param;}\";\n\nconst initialState = {\n  chatList: [],\n  code: defaultCode,\n  codeEditorList: [\n    {\n      title: \"main\",\n      content: defaultCode,\n      key: \"1\",\n    },\n  ],\n};\n\nconst Reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case actionTypes.SEND_MESSAGE:\n      return {\n        ...state,\n        chatList: [...state.chatList, payload],\n      };\n\n    case actionTypes.SET_BOT_RESPONSE:\n      const chatList = state.chatList.map((item) => {\n        if (item.key === payload.key) {\n          return { ...item, ...payload };\n        }\n        return item;\n      });\n      return {\n        ...state,\n        chatList,\n      };\n    case actionTypes.CHANGE_CODE_EDITOR:\n      return {\n        ...state,\n        ...payload,\n      };\n    case actionTypes.SET_CODE:\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport Reducer from \"./reducer\";\n\nconst store = createStore(Reducer, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}